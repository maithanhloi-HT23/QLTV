/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import GUI.model.ChuyenMuc;
import GUI.model.Sach;
import GUI.model.SinhVien;
import com.toedter.calendar.JTextFieldDateEditor;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Comparator;
import java.util.Date;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Loi
 */
public class QuanLyMuonSach extends javax.swing.JPanel {

    /**
     * Creates new form QuanLyMuonSach
     */
    private JFrame jframe = new JFrame();
    int selectedRowIndex;//Vi tri click chuot tren table
    private String sql;
    private Connection conn;
    private KetNoi ketnoiDB = new KetNoi();
    private Statement stmt;
    private ResultSet re;
    private PreparedStatement ps;

    private List<SinhVien> listSV = new ArrayList<>();
    private SinhVien svHienTai;
    private DanhMucTheLoai dmTL = new DanhMucTheLoai();
    private List<ChuyenMuc> cm;
    private List<Sach> listSachDaThem = new ArrayList<>();
    private List<Sach> listSach;

    private String mamuc;
    private DefaultTableModel modelTableDanhMuc;
    private DefaultTableModel modelTableSachMuon;

    private int soPH;
    private String masv;

    public QuanLyMuonSach() {
        initComponents();
        cm = dmTL.getCm();
        dsSinhVien();
        searchReadTime();
        mamuc = "";
        layDataTbale();
        layDataCombo();
        layListSach();
        modelTableSachMuon = (DefaultTableModel) tbSachMuon.getModel();
        setJDate();
        DateMuon.setEnabled(false);
        txtTenSach.setEnabled(false);
    }

    public void dsSinhVien() {
        try {
            conn = ketnoiDB.ConnectDB();
            stmt = conn.createStatement();
            sql = "select * from SinhVien";
            re = stmt.executeQuery(sql);
            while (re.next()) {
                listSV.add(new SinhVien(re.getString(1), re.getString(2), re.getString(3), re.getString(4)));
            }
            re.close();
            stmt.close();
            conn.close();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(QuanLyMuonSach.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(QuanLyMuonSach.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tbThonBao = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtMaSV = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtHoTen = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListMaSV = new javax.swing.JList<>();
        lblThongBao = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbDanhMuc = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        combTim = new javax.swing.JComboBox<>();
        cmdAll = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtSoPhieu = new javax.swing.JTextField();
        DateMuon = new com.toedter.calendar.JDateChooser();
        txtNguoiLap = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        DateTra = new com.toedter.calendar.JDateChooser();
        cmdXoaSach = new javax.swing.JButton();
        cmdXoaTran = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbSachMuon = new javax.swing.JTable();
        cmdTaoPhieu = new javax.swing.JButton();
        cmdSoPhieu = new javax.swing.JButton();
        cmdThemSach = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtTenSach = new javax.swing.JTextField();
        txtGhiChu = new javax.swing.JTextField();

        tbThonBao.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tìm sinh viên", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel1.setText("Mã sinh viên :");

        txtMaSV.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel2.setText("Họ tên :");

        txtHoTen.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jListMaSV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListMaSVMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jListMaSV);

        lblThongBao.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblThongBao.setText(".");

        javax.swing.GroupLayout tbThonBaoLayout = new javax.swing.GroupLayout(tbThonBao);
        tbThonBao.setLayout(tbThonBaoLayout);
        tbThonBaoLayout.setHorizontalGroup(
            tbThonBaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tbThonBaoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tbThonBaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(lblThongBao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(tbThonBaoLayout.createSequentialGroup()
                        .addGroup(tbThonBaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tbThonBaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtMaSV)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE)
                            .addComponent(txtHoTen))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        tbThonBaoLayout.setVerticalGroup(
            tbThonBaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tbThonBaoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tbThonBaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtMaSV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(tbThonBaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblThongBao)
                .addGap(22, 22, 22))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tìm Sách", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        tbDanhMuc.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        tbDanhMuc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã sách", "Thể loại", "Tên sách", "Tác giả", "Nhà XB", "Vị trí"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbDanhMuc.setRowHeight(25);
        tbDanhMuc.setShowGrid(true);
        tbDanhMuc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbDanhMucMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbDanhMuc);

        jLabel4.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel4.setText("Thể loại :");

        combTim.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        combTim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combTimActionPerformed(evt);
            }
        });

        cmdAll.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cmdAll.setText("Toàn bộ");
        cmdAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdAllActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(combTim, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(cmdAll)
                        .addGap(0, 20, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(combTim, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                    .addComponent(cmdAll))
                .addGap(27, 27, 27)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Chi tiết phiếu", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Số phiếu:");
        jLabel5.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Ngày lập:");
        jLabel6.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Người lập:");
        jLabel7.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Ngày hẹn trả:");
        jLabel8.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        cmdXoaSach.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cmdXoaSach.setText("Bỏ Sách");
        cmdXoaSach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdXoaSachActionPerformed(evt);
            }
        });

        cmdXoaTran.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cmdXoaTran.setText("Xóa Trắng");
        cmdXoaTran.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdXoaTranActionPerformed(evt);
            }
        });

        tbSachMuon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã sách", "Tên Sách", "Ghi chú"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tbSachMuon);

        cmdTaoPhieu.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        cmdTaoPhieu.setText("Tạo Phiếu");
        cmdTaoPhieu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdTaoPhieuActionPerformed(evt);
            }
        });

        cmdSoPhieu.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        cmdSoPhieu.setText("Tạo số phiếu");
        cmdSoPhieu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSoPhieuActionPerformed(evt);
            }
        });

        cmdThemSach.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cmdThemSach.setText("Thêm Sách");
        cmdThemSach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdThemSachActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Tên sách: ");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Ghi chú:");

        txtTenSach.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        txtGhiChu.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(cmdThemSach)
                                .addGap(83, 83, 83)
                                .addComponent(cmdXoaSach)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cmdXoaTran))
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addComponent(cmdSoPhieu)
                                    .addGap(158, 158, 158)
                                    .addComponent(cmdTaoPhieu, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 29, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(DateMuon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtSoPhieu))
                                .addGap(25, 25, 25)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtNguoiLap, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addGap(18, 18, 18)
                                        .addComponent(DateTra, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtGhiChu, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtTenSach, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtSoPhieu, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNguoiLap, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DateTra, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DateMuon, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtTenSach, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jLabel9))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(txtGhiChu, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmdThemSach, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(cmdXoaSach, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmdXoaTran, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmdSoPhieu)
                    .addComponent(cmdTaoPhieu, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tbThonBao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tbThonBao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void clickTim() {
        masv = txtMaSV.getText().toString().trim();
        if (!masv.isEmpty()) {
            boolean check = true;
            for (int i = 0; i < listSV.size(); i++) {
                SinhVien sv = listSV.get(i);
                if (sv.getMaSV().equals(masv)) {
                    txtHoTen.setText(sv.getHoTen());
                    svHienTai = sv;
                    check = false;
                }
            }
            if (check) {
                JOptionPane.showMessageDialog(this, "Không tìm thấy");
            }
        }
    }

    public double demSachMuon() throws ClassNotFoundException, SQLException {
        double soSach = 0;
        if (masv == "") {
            return 0;
        }
        conn = ketnoiDB.ConnectDB();
        stmt = conn.createStatement();
        sql = "Select * from Phieu inner join CTPhieu on Phieu.SoPhieu=CTPhieu.SoPhieu where MaSV = N'" + masv + "' and (NgayTra IS NULL)";
        re = stmt.executeQuery(sql);
        while (re.next()) {
            soSach++;
        }
        re.close();
        stmt.close();
        conn.close();
        return soSach;
    }

    private void jListMaSVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListMaSVMouseClicked
        int index = jListMaSV.locationToIndex(evt.getPoint());
        if (index >= 0) {
            String s = (String) jListMaSV.getModel().getElementAt(index);
            txtMaSV.setText(s);
            clickTim();
            jListMaSV.setVisible(false);
        }
        try {
            if (demSachMuon() == 0) {
                lblThongBao.setText("");
            } else {
                lblThongBao.setText("Sinh viên đang mượn " + demSachMuon() + " cuốn sách.");
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(QuanLyMuonSach.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(QuanLyMuonSach.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jListMaSVMouseClicked

    private DefaultComboBoxModel modelCombTim;

    private void layDataCombo() {
        modelCombTim = new DefaultComboBoxModel();
        for (ChuyenMuc item : cm) {
            modelCombTim.addElement(item);
        }
        combTim.setModel(modelCombTim);
    }

    private void layListSach() {
        listSach = new ArrayList<>();
        try {
            conn = ketnoiDB.ConnectDB();
            stmt = conn.createStatement();
            sql = "select * from Sach";
            re = stmt.executeQuery(sql);
            while (re.next()) {
                listSach.add(new Sach(re.getString(1), re.getString(2), re.getString(3), re.getString(4), re.getString(5), re.getString(6)));
            }
            re.close();
            stmt.close();
            conn.close();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(QuanLyMuonSach.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(QuanLyMuonSach.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void layDataTbale() {
        modelTableDanhMuc = (DefaultTableModel) tbDanhMuc.getModel();
        if (modelTableDanhMuc.getRowCount() > 0) {
            modelTableDanhMuc.setRowCount(0);
        }
        try {
            conn = ketnoiDB.ConnectDB();
            stmt = conn.createStatement();
            if ("".equals(mamuc)) {
                sql = "select * from Sach";
            } else {
                sql = "select * from Sach where mamuc = N'" + mamuc + "'";
            }
            re = stmt.executeQuery(sql);
            while (re.next()) {
                modelTableDanhMuc.addRow(new Object[]{re.getString(1), re.getString(2), re.getString(3), re.getString(4), re.getString(5), re.getString(6)});
            }
            re.close();
            stmt.close();
            conn.close();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(QuanLyMuonSach.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(QuanLyMuonSach.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void combTimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combTimActionPerformed
        mamuc = ((ChuyenMuc) combTim.getSelectedItem()).getMaMuc();
        layDataTbale();
    }//GEN-LAST:event_combTimActionPerformed

    private void cmdAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdAllActionPerformed
        mamuc = "";
        layDataTbale();
    }//GEN-LAST:event_cmdAllActionPerformed

    private void cmdThemSachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdThemSachActionPerformed
        boolean check = true;
        if (listSachDaThem.isEmpty()) {
            modelTableSachMuon.addRow(new Object[]{tbDanhMuc.getValueAt(tbDanhMuc.getSelectedRow(), 0), tbDanhMuc.getValueAt(tbDanhMuc.getSelectedRow(), 2), txtGhiChu.getText()});
            listSachDaThem.add(new Sach(
                    (String) tbDanhMuc.getValueAt(tbDanhMuc.getSelectedRow(), 0),
                    (String) tbDanhMuc.getValueAt(tbDanhMuc.getSelectedRow(), 1),
                    (String) tbDanhMuc.getValueAt(tbDanhMuc.getSelectedRow(), 2),
                    (String) tbDanhMuc.getValueAt(tbDanhMuc.getSelectedRow(), 3),
                    (String) tbDanhMuc.getValueAt(tbDanhMuc.getSelectedRow(), 4),
                    (String) tbDanhMuc.getValueAt(tbDanhMuc.getSelectedRow(), 5)
            ));
        } else if (listSachDaThem.size() > 10) {
            JOptionPane.showMessageDialog(this, "Sinh viên đã mượn quá 10 cuốn sách.");
        } else {
            String maSach = (String) tbDanhMuc.getValueAt(tbDanhMuc.getSelectedRow(), 0);
            for (int j = 0; j < listSachDaThem.size(); j++) {
                Sach b = listSachDaThem.get(j);
                if (b.getMaSach().equals(maSach)) {
                    JOptionPane.showMessageDialog(this, "Cuốn sách mã " + maSach + " đã được thêm");
                    check = false;
                    break;
                }
            }
            if (check == true) {
                for (int j = 0; j < listSach.size(); j++) {
                    Sach c = listSach.get(j);
                    if (maSach.equals(c.getMaSach())) {
                        listSachDaThem.add(c);
                        modelTableSachMuon.addRow(new Object[]{tbDanhMuc.getValueAt(tbDanhMuc.getSelectedRow(), 0), tbDanhMuc.getValueAt(tbDanhMuc.getSelectedRow(), 2), txtGhiChu.getText()});
                    }
                }
            }
        }
    }//GEN-LAST:event_cmdThemSachActionPerformed

    private void cmdXoaSachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdXoaSachActionPerformed
        if (listSachDaThem.isEmpty()) {
            return;
        }
        String maSach = (String) tbSachMuon.getValueAt(tbSachMuon.getSelectedRow(), 0);
        for (int j = 0; j < listSachDaThem.size(); j++) {
            Sach b = listSachDaThem.get(j);
            if (b.getMaSach().equals(maSach)) {
                listSachDaThem.remove(j);
                modelTableSachMuon.removeRow(tbSachMuon.getSelectedRow());
                break;
            }
        }
    }//GEN-LAST:event_cmdXoaSachActionPerformed

    private void xoaTrang() {
        txtMaSV.setText("");
        txtHoTen.setText("");
        txtSoPhieu.setText("");
        txtGhiChu.setText("");
        txtTenSach.setText("");
        txtNguoiLap.setText("");
    }

    private void cmdXoaTranActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdXoaTranActionPerformed
        listSachDaThem.clear();
        modelTableSachMuon.setRowCount(0);
    }//GEN-LAST:event_cmdXoaTranActionPerformed

    public String laySoPhieuMoi() throws ClassNotFoundException, SQLException {
        conn = ketnoiDB.ConnectDB();
        stmt = conn.createStatement();
        sql = "Select TOP 1 SoPhieu From Phieu Order By SoPhieu Desc";
        re = stmt.executeQuery(sql);
        while (re.next()) {
            soPH = Integer.parseInt(re.getString(1)) + 1;
        }
        re.close();
        stmt.close();
        conn.close();
        String str = "00000000" + Integer.toString(soPH);
        return str;
    }

    private void cmdSoPhieuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSoPhieuActionPerformed

        try {
            txtSoPhieu.setText(laySoPhieuMoi());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(QuanLyMuonSach.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(QuanLyMuonSach.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cmdSoPhieuActionPerformed

    private boolean checkLapPhieu() {
        if (txtSoPhieu.getText().toString().isEmpty()) {
            try {
                txtSoPhieu.setText(laySoPhieuMoi());
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(QuanLyMuonSach.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(QuanLyMuonSach.class.getName()).log(Level.SEVERE, null, ex);
            }
            txtSoPhieu.setEditable(false);
            return false;
        }
        if (txtNguoiLap.getText().toString().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Người lập không được bỏ trống");
            return false;
        }
        Calendar dateNgayMuon = DateMuon.getCalendar();
        Calendar dateNgayTra = DateTra.getCalendar();
        if (dateNgayTra.before(dateNgayMuon)) {
            DateTra.setDate(Date.from(LocalDate.now().plusMonths(3).atStartOfDay().atZone(ZoneId.systemDefault()).toInstant()));
            JOptionPane.showMessageDialog(this, "Ngày trả không được trước ngày mượn (Đã đưa về mặc định)");
            return false;
        }
        if ((dateNgayMuon.get(Calendar.MONTH) == dateNgayTra.get(Calendar.MONTH)) && (dateNgayMuon.get(Calendar.DAY_OF_MONTH) == dateNgayTra.get(Calendar.DAY_OF_MONTH)) && (dateNgayMuon.get(Calendar.YEAR) == dateNgayTra.get(Calendar.YEAR))) {
            DateTra.setDate(Date.from(LocalDate.now().plusMonths(3).atStartOfDay().atZone(ZoneId.systemDefault()).toInstant()));
            JOptionPane.showMessageDialog(this, "Ngày trả không được trùng ngày mượn (Đã đưa về mặc định)");
            return false;
        }
        if (listSachDaThem.size() == 0) {
            JOptionPane.showMessageDialog(this, "Chưa thêm cuốn sách nào");
            return false;
        }
        if (svHienTai == null) {
            JOptionPane.showMessageDialog(this, "Chưa xác định được sinh viên mượn sách");
            return false;
        }
        return true;
    }

    private void cmdTaoPhieuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdTaoPhieuActionPerformed
        if (checkLapPhieu() == true) {
            //tùy chỉnh văn bản cho nút lệnh
            Object[] options = {"Ghi phiếu", "Hủy"};
            int n = JOptionPane.showOptionDialog(jframe, "Bạn có muốn ghi lại phiếu mượn sách không?",
                    "MESSAGE",
                    JOptionPane.YES_NO_CANCEL_OPTION,
                    JOptionPane.QUESTION_MESSAGE,
                    null, options, options[1]);
            if (n == 0) {
                try {
                    SimpleDateFormat sdf = new SimpleDateFormat("MM/dd/yyyy");
                    String ngayMuon = sdf.format(new Date());
                    String ngayTra = sdf.format(DateTra.getDate());
                    //Ghi phiếu
                    sql = "INSERT INTO Phieu(SoPhieu,NgayLap,NguoiLap,MaSV,NgayHenTra,NgayKetThuc,DaKetThuc) VALUES(N'"
                            + txtSoPhieu.getText() + "','" + ngayMuon + "',N'" + txtNguoiLap.getText()
                            + "',N'" + masv + "','" + ngayTra + "',NULL,0)";
                    conn = ketnoiDB.ConnectDB();
                    stmt = conn.createStatement();
                    stmt.executeUpdate(sql);
                    stmt.close();
                    //ghi chi tiết
                    int i;
                    for (i = 0; i < modelTableSachMuon.getRowCount(); i++) {
                        sql = "INSERT INTO CTPhieu(SoPhieu,MaSach,GhiChuMuon,NgayTra,GhiChuTra) VALUES (N'" + txtSoPhieu.getText()
                                + "',N'" + modelTableSachMuon.getValueAt(i, 0) + "',N'" + txtGhiChu.getText() + "',NULL,'')";
                        stmt = conn.createStatement();
                        stmt.executeUpdate(sql);
                        stmt.close();
                    }
                    JOptionPane.showMessageDialog(this, "Ghi phiếu thành công");
                    xoaTrang();
                    svHienTai = null;
                    DateTra.setDate(Date.from(LocalDate.now().plusMonths(3).atStartOfDay().atZone(ZoneId.systemDefault()).toInstant()));
                    listSachDaThem.clear();
                    modelTableSachMuon.setRowCount(0);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(QuanLyMuonSach.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(QuanLyMuonSach.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_cmdTaoPhieuActionPerformed

    private void tbDanhMucMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbDanhMucMouseClicked
        txtTenSach.setText((String) modelTableDanhMuc.getValueAt(tbDanhMuc.getSelectedRow(), 0));
    }//GEN-LAST:event_tbDanhMucMouseClicked

    private void setJDate() {
        DateMuon.setDate(new Date());
        DateMuon.setDateFormatString("dd/MM/yyyy");
        DateMuon.setEnabled(false);

        DateTra.setDate(Date.from(LocalDate.now().plusMonths(3).atStartOfDay().atZone(ZoneId.systemDefault()).toInstant()));
        DateTra.setDateFormatString("dd/MM/yyyy");
        JTextFieldDateEditor editorNgayTra = (JTextFieldDateEditor) DateTra.getDateEditor();
        editorNgayTra.setEditable(false);
    }

    private void searchReadTime() {
        txtMaSV.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                if (!txtMaSV.getText().toString().trim().isEmpty()) {
                    updateChange();
                } else {
                    jListMaSV.setVisible(false);
                }
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                if (!txtMaSV.getText().toString().trim().isEmpty()) {
                    updateChange();
                } else {
                    jListMaSV.setVisible(false);
                }
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                if (!txtMaSV.getText().toString().trim().isEmpty()) {
                    updateChange();
                } else {
                    jListMaSV.setVisible(false);
                }
            }

            protected void updateChange() {
                Vector<String> vector = new Vector<>();
                String text = txtMaSV.getText().toString().trim();
                for (int i = 0; i < listSV.size(); i++) {
                    SinhVien sv = listSV.get(i);
                    if (sv.getMaSV().startsWith(text)) {
                        vector.add(sv.getMaSV());
                    }
                }
                vector.sort(new Comparator<String>() {
                    @Override
                    public int compare(String o1, String o2) {
                        return o1.compareTo(o2);
                    }
                });
                if (vector.size() > 0) {
                    jListMaSV.setListData(vector);
                    jListMaSV.setVisible(true);
                } else {
                    jListMaSV.setVisible(false);
                }
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser DateMuon;
    private com.toedter.calendar.JDateChooser DateTra;
    private javax.swing.JButton cmdAll;
    private javax.swing.JButton cmdSoPhieu;
    private javax.swing.JButton cmdTaoPhieu;
    private javax.swing.JButton cmdThemSach;
    private javax.swing.JButton cmdXoaSach;
    private javax.swing.JButton cmdXoaTran;
    private javax.swing.JComboBox<String> combTim;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<String> jListMaSV;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblThongBao;
    private javax.swing.JTable tbDanhMuc;
    private javax.swing.JTable tbSachMuon;
    private javax.swing.JPanel tbThonBao;
    private javax.swing.JTextField txtGhiChu;
    private javax.swing.JTextField txtHoTen;
    private javax.swing.JTextField txtMaSV;
    private javax.swing.JTextField txtNguoiLap;
    private javax.swing.JTextField txtSoPhieu;
    private javax.swing.JTextField txtTenSach;
    // End of variables declaration//GEN-END:variables

}
